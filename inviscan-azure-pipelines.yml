# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: Inviscan.API master

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
# Build and test Inviscan.API.
- task: DotNetCoreCLI@2
  inputs:
    command: build
    arguments: 'Inviscan.API/Inviscan.API.csproj --configuration Release'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    arguments: 'Inviscan.API.Tests/Inviscan.API.Tests.csproj --configuration Release'

# Build and test Inviscan.Sync
- task: DotNetCoreCLI@2
  inputs:
    command: build
    arguments: 'Inviscan.Sync/Inviscan.Sync.csproj --configuration Release'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    arguments: 'Inviscan.Sync.Tests/Inviscan.Sync.Tests.csproj --configuration Release'

# Archive build artifacts and publish Inviscan.API.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'Inviscan.API/bin/Release/netcoreapp3.1/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Inviscan.API master $(Build.BuildId).zip'
    replaceExistingArchive: true
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Inviscan.API master $(Build.BuildId)'
    publishLocation: 'Container'
  

# Archive build artifacts and publish Inviscan.Sync.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'Inviscan.Sync/bin/Release/netcoreapp3.1/'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Inviscan.Sync master $(Build.BuildId).zip'
    replaceExistingArchive: true
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Inviscan.Sync master $(Build.BuildId)'
    publishLocation: 'Container'
